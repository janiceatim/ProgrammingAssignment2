B <- matrix(c(1:4),2,2)
B1 <- makeCacheMatrix(B)
cacheSolve(B1)
setInverse <- function(Inverse) inv <<- Inverse
setInverse <- function(Inverse) inv <<- Inverse
source('~/Desktop/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setInverse <- function(Inverse) inv <<- Inverse
getInverse <- function() inv
list(set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getInverse()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data, ...)
x$setInverse(inv)
inv
}
B1 <- makeCacheMatrix(B)
cacheSolve(B1)
cacheSolve(B1)
